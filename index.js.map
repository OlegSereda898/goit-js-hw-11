{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import iziToast from \"izitoast\";\n\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport SimpleLightbox from \"simplelightbox\";\n\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\n\nconst API_KEY = \"47404996-12b53dec464063fd6255bb496\";\nconst BASE_URL = \"https://pixabay.com/api/\";\n\nexport async function fetchImages(query, page = 1, perPage = 12) {\n    const url = `${BASE_URL}?key=${API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=${perPage}`;\n    \n    const response = await fetch(url);\n    if (!response.ok) {\n    throw new Error(\"Failed to fetch images\");\n    }\n    return await response.json();\n}\n","import iziToast from \"izitoast\";\n\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport SimpleLightbox from \"simplelightbox\";\n\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nexport function renderGallery(images) {\n    return images\n    .map(\n        ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) =>\n        `<a href=\"${largeImageURL}\" class=\"gallery__item\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n            <div class=\"info\">\n            <p><b>Likes:</b> ${likes}</p>\n            <p><b>Views:</b> ${views}</p>\n            <p><b>Comments:</b> ${comments}</p>\n            <p><b>Downloads:</b> ${downloads}</p>\n            </div>\n        </a>`\n    )\n    .join(\"\");\n}\n\nexport function clearGallery(container) {\n    container.innerHTML = \"\";\n}\n","import { fetchImages } from \"./js/pixabay-api.js\";\nimport { renderGallery, clearGallery } from \"./js/render-functions.js\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector(\"#search-form\");\nconst gallery = document.querySelector(\".gallery\");\nconst loader = document.querySelector(\".loader\");\n\nlet lightbox = new SimpleLightbox(\".gallery a\");\nlet currentQuery = \"\";\nlet currentPage = 1;\n\nform.addEventListener(\"submit\", async (e) => {\n    e.preventDefault();\n\n    const query = e.target.elements.searchQuery.value.trim();\n    if (!query) {\n        iziToast.error({\n            title: \"Error\",\n            message: \"Search field cannot be empty!\",\n            position: \"topRight\",\n            backgroundColor: \"#ef4040\",\n            titleColor: \"#ffff\",\n            messageColor: \"#ffff\"\n        });\n    return;\n    }\n\n    currentQuery = query;\n    currentPage = 1;\n    \n    try {\n    loader.style.display = \"block\";\n    const data = await fetchImages(query);\n    loader.style.display = \"none\";\n\n    if (data.hits.length === 0) {\n        iziToast.warning({\n            title: \"No Results\",\n            message: \"Sorry, there are no images matching your search query.\",\n            position: \"topRight\",\n            backgroundColor: \"#ef4040\",\n            titleColor: \"#ffff\",\n            messageColor: \"#ffff\"\n        });\n        clearGallery(gallery);\n        return;\n    }\n\n    clearGallery(gallery);\n    gallery.innerHTML = renderGallery(data.hits);\n    lightbox.refresh();\n    } catch (error) {\n    loader.style.display = \"none\";\n        iziToast.error({\n            title: \"Error\",\n            message: \"Something went wrong. Try again later.\",\n            position: \"topRight\",\n            backgroundColor: \"#ef4040\",\n            titleColor: \"#ffff\",\n            messageColor: \"#ffff\"\n        });\n    }\n});\n\n\n"],"names":["API_KEY","BASE_URL","fetchImages","query","page","perPage","url","response","renderGallery","images","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","container","form","gallery","loader","lightbox","SimpleLightbox","e","iziToast","data"],"mappings":"6vBAUA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAOC,EAAO,EAAGC,EAAU,GAAI,CAC7D,MAAMC,EAAM,GAAGL,CAAQ,QAAQD,CAAO,MAAM,mBAAmBG,CAAK,CAAC,iEAAiEC,CAAI,aAAaC,CAAO,GAExJE,EAAW,MAAM,MAAMD,CAAG,EAChC,GAAI,CAACC,EAAS,GACd,MAAM,IAAI,MAAM,wBAAwB,EAExC,OAAO,MAAMA,EAAS,MAC1B,CCbO,SAASC,EAAcC,EAAQ,CAClC,OAAOA,EACN,IACG,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IACzE,YAAYL,CAAa;AAAA,wBACTD,CAAY,UAAUE,CAAI;AAAA;AAAA,+BAEnBC,CAAK;AAAA,+BACLC,CAAK;AAAA,kCACFC,CAAQ;AAAA,mCACPC,CAAS;AAAA;AAAA,aAGvC,EACA,KAAK,EAAE,CACZ,CAEO,SAASC,EAAaC,EAAW,CACpCA,EAAU,UAAY,EAC1B,CCpBA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAE/C,IAAIC,EAAW,IAAIC,EAAe,YAAY,EAI9CJ,EAAK,iBAAiB,SAAU,MAAOK,GAAM,CACzCA,EAAE,eAAc,EAEhB,MAAMrB,EAAQqB,EAAE,OAAO,SAAS,YAAY,MAAM,OAClD,GAAI,CAACrB,EAAO,CACRsB,EAAS,MAAM,CACX,MAAO,QACP,QAAS,gCACT,SAAU,WACV,gBAAiB,UACjB,WAAY,QACZ,aAAc,OAC1B,CAAS,EACL,MACC,CAKD,GAAI,CACJJ,EAAO,MAAM,QAAU,QACvB,MAAMK,EAAO,MAAMxB,EAAYC,CAAK,EAGpC,GAFAkB,EAAO,MAAM,QAAU,OAEnBK,EAAK,KAAK,SAAW,EAAG,CACxBD,EAAS,QAAQ,CACb,MAAO,aACP,QAAS,yDACT,SAAU,WACV,gBAAiB,UACjB,WAAY,QACZ,aAAc,OAC1B,CAAS,EACDR,EAAaG,CAAO,EACpB,MACH,CAEDH,EAAaG,CAAO,EACpBA,EAAQ,UAAYZ,EAAckB,EAAK,IAAI,EAC3CJ,EAAS,QAAO,CACf,MAAe,CAChBD,EAAO,MAAM,QAAU,OACnBI,EAAS,MAAM,CACX,MAAO,QACP,QAAS,yCACT,SAAU,WACV,gBAAiB,UACjB,WAAY,QACZ,aAAc,OAC1B,CAAS,CACJ,CACL,CAAC"}